#!/usr/bin/env php
<?php
/**
 * Plugin ZIP Packager CLI
 * 
 * A Composer-integrated CLI tool to package WordPress plugins into ZIP files.
 * 
 * @package Urlund\WpPluginUpdater
 * @author Henrik Urlund
 * @version 1.0.0
 */

// Try to find the autoloader
$autoloaderPaths = [
    __DIR__ . '/../vendor/autoload.php',  // When installed as dependency
    __DIR__ . '/../../../autoload.php',  // When this package is a dependency
];

$autoloaderFound = false;
foreach ($autoloaderPaths as $path) {
    if (file_exists($path)) {
        require_once $path;
        $autoloaderFound = true;
        break;
    }
}

if (!$autoloaderFound) {
    // Fallback - no autoloader needed for this simple script
    // The script will work standalone
}

use Urlund\WordPress\PluginUpdater\Tools\PluginZipPackager;

// If the class is not autoloaded, load it inline
if (!class_exists('Urlund\WordPress\PluginUpdater\Tools\PluginZipPackager')) {
    require_once __DIR__ . '/../src/Tools/PluginZipPackager.php';
}

// Check if ZIP extension is available
if (!extension_loaded('zip')) {
    echo "\033[31m✗ Error: PHP ZIP extension is required but not installed.\033[0m\n";
    echo "Please install the ZIP extension:\n";
    echo "  - Ubuntu/Debian: sudo apt-get install php-zip\n";
    echo "  - CentOS/RHEL: sudo yum install php-zip\n";
    echo "  - macOS (Homebrew): brew install php && brew install php-zip\n";
    echo "  - Windows: Enable extension=zip in php.ini\n";
    exit(1);
}

// Run the CLI tool
if (php_sapi_name() === 'cli') {
    try {
        $packager = new PluginZipPackager();
        $packager->run();
    } catch (Exception $e) {
        echo "\033[31m✗ Error: " . $e->getMessage() . "\033[0m\n";
        exit(1);
    }
} else {
    echo "This script must be run from the command line.\n";
    exit(1);
}
